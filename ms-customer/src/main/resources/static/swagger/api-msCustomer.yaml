openapi: 3.0.0
info:
  title: Customer Management API
  description: API for managing customers and addresses
  version: 1.0.0

servers:
  - url: http://localhost:8080

paths:
  /v1/address:
    post:
      summary: Create a new address
      description: Creates a new address for a customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
      responses:
        '201':
          description: Address created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressDTO'
    put:
      summary: Update an existing address
      description: Updates an existing address by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
      responses:
        '200':
          description: Address updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressDTO'
    delete:
      summary: Delete an address
      description: Deletes an address by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int
      responses:
        '204':
          description: Address deleted successfully

  /v1/customers:
    post:
      summary: Create a new customer
      description: Creates a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDTO'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
    put:
      summary: Update an existing customer
      description: Updates an existing customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDTO'
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
  /v1/customers/{id}:
    get:
      summary: Get a customer by ID
      description: Retrieves a customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: Customer retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'

components:
  schemas:
    AddressDTO:
      type: object
      properties:
        id:
          type: integer
          format: int
        state:
          type: string
        city:
          type: string
        district:
          type: string
        street:
          type: string
        number:
          type: string
        cep:
          type: string
        complement:
          type: string
        customerId:
          $ref: '#/components/schemas/CustomerDTO'

    AddressRequest:
      type: object
      properties:
        state:
          type: string
        city:
          type: string
        district:
          type: string
        street:
          type: string
        number:
          type: string
        cep:
          type: string
        complement:
          type: string
        customerId:
          type: integer
          format: int

    CustomerDTO:
      type: object
      properties:
        id:
          type: integer
          format: int
        firstName:
          type: string
        lastName:
          type: string
        sex:
          type: string
          enum: [MALE, FEMALE, OTHER]
        cpf:
          type: string
          pattern: "\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}"
          description: CPF must be in the format 000.000.000-00
        birthdate:
          type: string
          format: date
        email:
          type: string
          format: email
        password:
          type: string
        active:
          type: boolean
        addressList:
          type: array
          items:
            $ref: '#/components/schemas/AddressResponse'

    AddressResponse:
      type: object
      properties:
        id:
          type: integer
          format: int
        state:
          type: string
        city:
          type: string
        district:
          type: string
        street:
          type: string
        number:
          type: string
        cep:
          type: string
        complement:
          type: string
        customerId:
          type: integer
          format: int